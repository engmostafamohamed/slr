name: Deploy Laravel 11 to AWS Elastic Beanstalk

on:
  push:
    branches: [main] # You can change this to 'staging' or any other branch if needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, ctype, fileinfo, openssl, tokenizer, xml, gd, pdo_mysql

      # Create temporary .env for CI to avoid SQLite errors
      - name: Create .env file for CI
        run: |
          cp .env.example .env
          echo "APP_KEY=base64:$(php -r 'echo base64_encode(random_bytes(32));')" >> .env
          echo "APP_ENV=production" >> .env
          echo "APP_DEBUG=false" >> .env
          echo "LOG_CHANNEL=stderr" >> .env

          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_PORT=26130" >> .env
          echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      # Install PHP dependencies
      - name: Install Composer dependencies
        run: |
          composer install --no-dev --optimize-autoloader
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear
          php artisan cache:clear

      # Set permissions
      - name: Set correct permissions
        run: chmod -R 775 storage bootstrap/cache

      # Create .ebextensions directory and configuration files
      - name: Create EB configuration files
        run: |
          mkdir -p .ebextensions

          # Environment variables
          echo "option_settings:
            aws:elasticbeanstalk:application:environment:
              APP_ENV: production
              APP_DEBUG: false
              LOG_CHANNEL: stderr
              DB_CONNECTION: mysql
              DB_HOST: ${{ secrets.DB_HOST }}
              DB_PORT: 26130
              DB_DATABASE: ${{ secrets.DB_DATABASE }}
              DB_USERNAME: ${{ secrets.DB_USERNAME }}
              DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          " > .ebextensions/01-environment.config

          # File permissions
          echo "container_commands:
            01_storage_permissions:
              command: \"chmod -R 775 storage bootstrap/cache\" 
              ignoreErrors: false
          " > .ebextensions/02-permissions.config

          # Run migrations & optimize
          echo "container_commands:
            01_migrate:
              command: \"php artisan migrate --force\"
              leader_only: true
            02_optimize:
              command: \"php artisan optimize\"
          " > .ebextensions/03-migrations.config

      # Package the application for deployment
      - name: Create deployment package
        run: |
          rm -rf node_modules/ .git/ .github/
          zip -r ../app.zip . -x '*.git*' '*.env*'

      # Deploy to Elastic Beanstalk
      - name: Deploy to AWS Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          application_name: ${{ secrets.AWS_ELASTICBEANSTALK_APPLICATION_NAME }}
          environment_name: ${{ secrets.AWS_ELASTICBEANSTALK_ENVIRONMENT_NAME }}
          version_label: "v${{ github.run_number }}"
          deployment_package: ../app.zip
