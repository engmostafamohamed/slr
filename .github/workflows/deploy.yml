name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main  # or 'staging' for staging env

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, bcmath, gd, pdo, mysql

      - name: Install Composer dependencies
        run: |
          curl -sS https://getcomposer.org/installer | php
          php composer.phar install --no-dev --optimize-autoloader

      - name: Install Node.js and build assets
        run: |
          curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install
          npm run prod

      - name: Set Laravel Permissions
        run: |
          chmod -R 775 storage bootstrap/cache

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Zip the application
        run: |
          zip -r application.zip . -x '*.git*' 'node_modules/*' 'storage/*' 'vendor/*'

      - name: Upload to S3
        run: |
          aws s3 cp application.zip s3://${{ secrets.S3_BUCKET_NAME }}/application.zip

      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name ${{ secrets.AWS_ELASTICBEANSTALK_APPLICATION_NAME }} \
            --version-label $GITHUB_SHA \
            --source-bundle S3Bucket=${{ secrets.S3_BUCKET_NAME }},S3Key=application.zip

          aws elasticbeanstalk update-environment \
            --environment-name ${{ secrets.AWS_ELASTICBEANSTALK_ENVIRONMENT_NAME }} \
            --version-label $GITHUB_SHA

      - name: Run migrations
        run: |
          php artisan migrate --force
